{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","About","NotFound","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Object","objectSpread","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd8fdd94.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  // Async/Await Syntax\n  async componentDidMount() {\n    // it waits the GET Requests to finish and it puts the result in the variable, and then we have the res.data here\n    const res = await axios\n      // GET Request\n      .get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  // if this were a frontend to a backend website, we've have to make HTTP request to delete it from the backend, from the actual database, and we try to mimic it here\n\n  // it gives us a 404 error because what we're doing is we're trying to make a DELETE Request to the url (https://jsonplaceholder.typicode.com/users/11), as 11 is the id that was assigned to us, but this didn't actually get stored in the database, so it's trying to delete something that's not there\n\n  // in an arrow function we put async before the parameters\n  onDeleteClick = async (id, dispatch) => {\n    // we try to do the await\n    try {\n      // DELETE Request\n      // it makes the request first, when it's done, we do the dispatch\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      // then we want to do the dispatch either way\n      // if it works we want to do the dispatch here\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      // even if there's an error (e.g. 404 message), we still want to do the dispatch beacuse we want it to acutally delete from the DOM\n      // this is something we wouldn't do in real life if we could actually have acess to database and make updates\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  name,\n  label,\n  type,\n  placeholder,\n  value,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios\n      // POST Request\n      .post('https://jsonplaceholder.typicode.com/users', newContact);\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    // PUT Request\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}